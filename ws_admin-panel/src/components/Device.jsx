// import { useEffect, useState } from "react";
import api from "../utils/axios";

export default function Device({ deviceId, deviceStatus, deviceLast_connected, deviceLast_online, deviceToken, deviceTokenId, telemetry, fetchDevices }) {
  // const [lastTelemetry, setLastTelemetry] = useState([]);

  const generateDeviceToken = async () => {
    await api.put(`/device-tokens`, { deviceId });
    await fetchDevices();
  };

  const deleteDeviceToken = async () => {
    if (window.confirm("–í—ã —É–≤–µ—Ä–µ–Ω–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞?")) {
      await api.delete(`/device-tokens/${deviceTokenId}`);
      await fetchDevices();
    }
  };

  const deleteDevice = async () => {
    if (window.confirm("–í—ã —É–≤–µ—Ä–µ–Ω–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ?")) {
      await api.delete(`/devices/${deviceId}`);
      await fetchDevices();
    }
  };

  const displayTime = deviceLast_online ? new Date(deviceLast_online).toLocaleString() : deviceLast_connected ? new Date(deviceLast_connected).toLocaleString() : "-";

  return (
    <ul className="space-y-2">
      <li>
        <p>
          <strong>ID:</strong> {deviceId}
        </p>
        <p>
          <strong>–°—Ç–∞—Ç—É—Å:</strong> {deviceStatus ? "–ü–æ–¥–∫–ª—é—á–µ–Ω–æ" : "–û—Ç–∫–ª—é—á–µ–Ω–æ"}
        </p>
        <p>
          <strong>–ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ:</strong> {displayTime}
        </p>
        <p>
          <strong>–¢–æ–∫–µ–Ω:</strong> {deviceToken || "–ù–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω"}
        </p>

        {deviceStatus ? (
          <div className="mt-2 p-2 border rounded bg-gray-50">
            <p>
              <strong>üîã –ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ:</strong> {telemetry.voltage} –í
            </p>
            <p>
              <strong>üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</strong> {telemetry.temperature} ¬∞C
            </p>
            <p>
              <strong>üïí –í—Ä–µ–º—è:</strong> {new Date(telemetry.timestamp).toLocaleString()}
            </p>
          </div>
        ) : (
          <p className="text-gray-500">–ù–µ—Ç —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏</p>
        )}
      </li>

      <li className="flex justify-between">
        <div className="space-x-2">
          <button onClick={generateDeviceToken} className="p-1 bg-blue-600 text-white rounded hover:bg-blue-700 transition cursor-pointer ">
            {deviceToken ? "–û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω" : "–°–æ–∑–¥–∞—Ç—å —Ç–æ–∫–µ–Ω"}
          </button>
          {deviceToken && (
            <button onClick={deleteDeviceToken} className="p-1 bg-red-600 text-white rounded hover:bg-red-700 transition cursor-pointer ">
              –£–¥–∞–ª–∏—Ç—å —Ç–æ–∫–µ–Ω
            </button>
          )}
        </div>
        <button onClick={deleteDevice} className="p-1 bg-red-600 text-white rounded hover:bg-red-700 transition cursor-pointer ">
          –£–¥–∞–ª–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
        </button>
      </li>
    </ul>
  );
}
